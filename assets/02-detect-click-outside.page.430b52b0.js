import{h as s}from"./vendor.0cee6789.js";const n=[s("h1",{},["Detect click outside"]),s("h2",{},["Problem"]),s("p",{},["You want to detect clicks outside an element."]),s("h2",{},["Solution"]),s("p",{},["The basic idea is to globally capture clicks, and check whether the clicked element is inside the element of our concern. We need a ",s("a",{href:"https://v3.vuejs.org/guide/composition-api-template-refs.html"},["template ref"])," to specify the element, and a callback function. Event listener is loaded / removed along with the Vue component."]),s("div",{innerHTML:`<pre class="shiki" style="background-color: #282A36"><code><span class="line"><span style="color: #F286C4">function</span><span style="color: #F6F6F4"> </span><span style="color: #62E884">useClickOutside</span><span style="color: #F6F6F4">(</span></span>
<span class="line"><span style="color: #F6F6F4">  </span><span style="color: #FFB86C; font-style: italic">el</span><span style="color: #F286C4">:</span><span style="color: #F6F6F4"> </span><span style="color: #97E1F1; font-style: italic">Ref</span><span style="color: #F6F6F4">&lt;</span><span style="color: #FFB86C; font-style: italic">HTMLElement</span><span style="color: #F6F6F4"> </span><span style="color: #F286C4">|</span><span style="color: #F6F6F4"> </span><span style="color: #97E1F1; font-style: italic">null</span><span style="color: #F6F6F4">&gt;,</span></span>
<span class="line"><span style="color: #F6F6F4">  </span><span style="color: #62E884">onClickOutside</span><span style="color: #F286C4">:</span><span style="color: #F6F6F4"> () </span><span style="color: #F286C4">=&gt;</span><span style="color: #F6F6F4"> </span><span style="color: #97E1F1; font-style: italic">void</span><span style="color: #F6F6F4">,</span></span>
<span class="line"><span style="color: #F6F6F4">  </span><span style="color: #FFB86C; font-style: italic">mouseEvent</span><span style="color: #F286C4">:</span><span style="color: #F6F6F4"> </span><span style="color: #DEE492">&#39;</span><span style="color: #E7EE98">click</span><span style="color: #DEE492">&#39;</span><span style="color: #F6F6F4"> </span><span style="color: #F286C4">|</span><span style="color: #F6F6F4"> </span><span style="color: #DEE492">&#39;</span><span style="color: #E7EE98">dblclick</span><span style="color: #DEE492">&#39;</span><span style="color: #F6F6F4"> </span><span style="color: #F286C4">|</span><span style="color: #F6F6F4"> </span><span style="color: #DEE492">&#39;</span><span style="color: #E7EE98">mouseup</span><span style="color: #DEE492">&#39;</span><span style="color: #F6F6F4"> </span><span style="color: #F286C4">=</span><span style="color: #F6F6F4"> </span><span style="color: #DEE492">&#39;</span><span style="color: #E7EE98">click</span><span style="color: #DEE492">&#39;</span><span style="color: #F6F6F4">,</span></span>
<span class="line"><span style="color: #F6F6F4">) {</span></span>
<span class="line"><span style="color: #F6F6F4">  </span><span style="color: #F286C4">const</span><span style="color: #F6F6F4"> </span><span style="color: #62E884">listener</span><span style="color: #F6F6F4"> </span><span style="color: #F286C4">=</span><span style="color: #F6F6F4"> (</span><span style="color: #FFB86C; font-style: italic">e</span><span style="color: #F286C4">:</span><span style="color: #F6F6F4"> </span><span style="color: #97E1F1; font-style: italic">Event</span><span style="color: #F6F6F4">) </span><span style="color: #F286C4">=&gt;</span><span style="color: #F6F6F4"> {</span></span>
<span class="line"><span style="color: #F6F6F4">    </span><span style="color: #F286C4">if</span><span style="color: #F6F6F4"> (el.value </span><span style="color: #F286C4">&amp;&amp;</span><span style="color: #F6F6F4"> </span><span style="color: #F286C4">!</span><span style="color: #F6F6F4">el.value.</span><span style="color: #62E884">contains</span><span style="color: #F6F6F4">(e.target </span><span style="color: #F286C4">as</span><span style="color: #F6F6F4"> </span><span style="color: #97E1F1; font-style: italic">HTMLElement</span><span style="color: #F6F6F4">)) {</span></span>
<span class="line"><span style="color: #F6F6F4">      </span><span style="color: #62E884">onClickOutside</span><span style="color: #F6F6F4">()</span></span>
<span class="line"><span style="color: #F6F6F4">    }</span></span>
<span class="line"><span style="color: #F6F6F4">  }</span></span>
<span class="line"><span style="color: #F6F6F4">  </span><span style="color: #62E884">onMounted</span><span style="color: #F6F6F4">(() </span><span style="color: #F286C4">=&gt;</span><span style="color: #F6F6F4"> {</span></span>
<span class="line"><span style="color: #F6F6F4">    document.</span><span style="color: #62E884">addEventListener</span><span style="color: #F6F6F4">(mouseEvent, listener)</span></span>
<span class="line"><span style="color: #F6F6F4">  })</span></span>
<span class="line"><span style="color: #F6F6F4">  </span><span style="color: #62E884">onBeforeUnmount</span><span style="color: #F6F6F4">(() </span><span style="color: #F286C4">=&gt;</span><span style="color: #F6F6F4"> {</span></span>
<span class="line"><span style="color: #F6F6F4">    document.</span><span style="color: #62E884">removeEventListener</span><span style="color: #F6F6F4">(mouseEvent, listener)</span></span>
<span class="line"><span style="color: #F6F6F4">  })</span></span>
<span class="line"><span style="color: #F6F6F4">}</span></span>
<span class="line"></span></code></pre>`}),s("p",{},["Another way is to provide a custom ",s("code",{},["v-click-outside"])," ",s("a",{href:"https://v3.vuejs.org/guide/custom-directive.html"},["directive"]),":"]),s("div",{innerHTML:`<pre class="shiki" style="background-color: #282A36"><code><span class="line"><span style="color: #F286C4">function</span><span style="color: #F6F6F4"> </span><span style="color: #62E884">listener</span><span style="color: #F6F6F4">(</span><span style="color: #FFB86C; font-style: italic">el</span><span style="color: #F286C4">:</span><span style="color: #F6F6F4"> </span><span style="color: #97E1F1; font-style: italic">Element</span><span style="color: #F6F6F4">, </span><span style="color: #62E884">onClickOutside</span><span style="color: #F286C4">:</span><span style="color: #F6F6F4"> () </span><span style="color: #F286C4">=&gt;</span><span style="color: #F6F6F4"> </span><span style="color: #97E1F1; font-style: italic">void</span><span style="color: #F6F6F4">) {</span></span>
<span class="line"><span style="color: #F6F6F4">  </span><span style="color: #F286C4">return</span><span style="color: #F6F6F4"> (</span><span style="color: #FFB86C; font-style: italic">e</span><span style="color: #F286C4">:</span><span style="color: #F6F6F4"> </span><span style="color: #97E1F1; font-style: italic">Event</span><span style="color: #F6F6F4">) </span><span style="color: #F286C4">=&gt;</span><span style="color: #F6F6F4"> {</span></span>
<span class="line"><span style="color: #F6F6F4">    </span><span style="color: #F286C4">if</span><span style="color: #F6F6F4"> (el </span><span style="color: #F286C4">&amp;&amp;</span><span style="color: #F6F6F4"> </span><span style="color: #F286C4">!</span><span style="color: #F6F6F4">el.</span><span style="color: #62E884">contains</span><span style="color: #F6F6F4">(e.target </span><span style="color: #F286C4">as</span><span style="color: #F6F6F4"> </span><span style="color: #97E1F1; font-style: italic">HTMLElement</span><span style="color: #F6F6F4">)) {</span></span>
<span class="line"><span style="color: #F6F6F4">      </span><span style="color: #62E884">onClickOutside</span><span style="color: #F6F6F4">()</span></span>
<span class="line"><span style="color: #F6F6F4">    }</span></span>
<span class="line"><span style="color: #F6F6F4">  }</span></span>
<span class="line"><span style="color: #F6F6F4">}</span></span>
<span class="line"><span style="color: #F6F6F4">app.</span><span style="color: #62E884">directive</span><span style="color: #F6F6F4">(</span><span style="color: #DEE492">&#39;</span><span style="color: #E7EE98">click-outside</span><span style="color: #DEE492">&#39;</span><span style="color: #F6F6F4">, {</span></span>
<span class="line"><span style="color: #F6F6F4">  </span><span style="color: #62E884">mounted</span><span style="color: #F6F6F4">(</span><span style="color: #FFB86C; font-style: italic">el</span><span style="color: #F6F6F4">, </span><span style="color: #FFB86C; font-style: italic">binding</span><span style="color: #F6F6F4">) {</span></span>
<span class="line"><span style="color: #F6F6F4">    el.clickOutsideListener </span><span style="color: #F286C4">=</span><span style="color: #F6F6F4"> </span><span style="color: #62E884">listener</span><span style="color: #F6F6F4">(el, binding.value)</span></span>
<span class="line"><span style="color: #F6F6F4">    document.</span><span style="color: #62E884">addEventListener</span><span style="color: #F6F6F4">(binding.arg </span><span style="color: #F286C4">||</span><span style="color: #F6F6F4"> </span><span style="color: #DEE492">&#39;</span><span style="color: #E7EE98">click</span><span style="color: #DEE492">&#39;</span><span style="color: #F6F6F4">, el.clickOutsideListener)</span></span>
<span class="line"><span style="color: #F6F6F4">  },</span></span>
<span class="line"><span style="color: #F6F6F4">  </span><span style="color: #62E884">beforeUnmount</span><span style="color: #F6F6F4">(</span><span style="color: #FFB86C; font-style: italic">el</span><span style="color: #F6F6F4">, </span><span style="color: #FFB86C; font-style: italic">binding</span><span style="color: #F6F6F4">) {</span></span>
<span class="line"><span style="color: #F6F6F4">    document.</span><span style="color: #62E884">removeEventListener</span><span style="color: #F6F6F4">(</span></span>
<span class="line"><span style="color: #F6F6F4">      binding.arg </span><span style="color: #F286C4">||</span><span style="color: #F6F6F4"> </span><span style="color: #DEE492">&#39;</span><span style="color: #E7EE98">click</span><span style="color: #DEE492">&#39;</span><span style="color: #F6F6F4">,</span></span>
<span class="line"><span style="color: #F6F6F4">      el.clickOutsideListener,</span></span>
<span class="line"><span style="color: #F6F6F4">    )</span></span>
<span class="line"><span style="color: #F6F6F4">  },</span></span>
<span class="line"><span style="color: #F6F6F4">})</span></span>
<span class="line"></span></code></pre>`}),s("p",{},["Usage:"]),s("div",{innerHTML:`<pre class="shiki" style="background-color: #282A36"><code><span class="line"><span style="color: #F6F6F4">&lt;</span><span style="color: #F286C4">div</span><span style="color: #F6F6F4"> </span><span style="color: #62E884; font-style: italic">v-click-outside:mouseup</span><span style="color: #F286C4">=</span><span style="color: #DEE492">&quot;</span><span style="color: #E7EE98">onClickOutside</span><span style="color: #DEE492">&quot;</span><span style="color: #F6F6F4">&gt;&lt;/</span><span style="color: #F286C4">div</span><span style="color: #F6F6F4">&gt;</span></span>
<span class="line"></span></code></pre>`})];var a={render(){return n}};const o={title:"Detect click outside",layout:"book"};export{a as default,o as frontmatter,n as nodes};
